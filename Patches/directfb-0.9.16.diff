diff -cr DirectFB-0.9.16/include/directfb.h DirectFB-0.9.16.new/include/directfb.h
*** DirectFB-0.9.16/include/directfb.h	Wed Jan 15 14:05:47 2003
--- DirectFB-0.9.16.new/include/directfb.h	Sat Mar  1 19:15:33 2003
***************
*** 794,804 ****
                                             2x2 subsampled U and V planes */
       DSPF_YV12           = 0x08100C0B,  /* 8 bit Y plane followed by 8 bit
                                             2x2 subsampled V and U planes */
!      DSPF_LUT8           = 0x4011080C   /* 8 bit lookup table (palette) */
  } DFBSurfacePixelFormat;
  
  /* Number of pixelformats defined */
! #define DFB_NUM_PIXELFORMATS            12
  
  /* These macros extract information about the pixel format. */
  #define DFB_PIXELFORMAT_INDEX(fmt)      (((fmt) & 0x0000FF) - 1)
--- 794,806 ----
                                             2x2 subsampled U and V planes */
       DSPF_YV12           = 0x08100C0B,  /* 8 bit Y plane followed by 8 bit
                                             2x2 subsampled V and U planes */
!      DSPF_LUT8           = 0x4011080C,   /* 8 bit lookup table (palette) */
!      DSPF_ARGB1555R      = 0x0021100D  /* 16bit ARGB (2 bytes, alpha 1@15,
!                                            red 5@0, green 5@5, blue 5@10) */
  } DFBSurfacePixelFormat;
  
  /* Number of pixelformats defined */
! #define DFB_NUM_PIXELFORMATS            13
  
  /* These macros extract information about the pixel format. */
  #define DFB_PIXELFORMAT_INDEX(fmt)      (((fmt) & 0x0000FF) - 1)
diff -cr DirectFB-0.9.16/interfaces/IDirectFBImageProvider/idirectfbimageprovider_jpeg.c DirectFB-0.9.16.new/interfaces/IDirectFBImageProvider/idirectfbimageprovider_jpeg.c
*** DirectFB-0.9.16/interfaces/IDirectFBImageProvider/idirectfbimageprovider_jpeg.c	Sun Dec 29 01:17:05 2002
--- DirectFB-0.9.16.new/interfaces/IDirectFBImageProvider/idirectfbimageprovider_jpeg.c	Sat Mar  1 18:06:06 2003
***************
*** 373,378 ****
--- 373,379 ----
            case DSPF_RGB332:
  #endif
            case DSPF_ARGB1555:
+           case DSPF_ARGB1555R:
            case DSPF_RGB16:
            case DSPF_RGB24:
            case DSPF_RGB32:
***************
*** 448,453 ****
--- 449,455 ----
                                             cinfo.output_width);
                                break;
                           case DSPF_ARGB1555:
+                          case DSPF_ARGB1555R:
                                copy_line15( (__u16*)row_ptr, *buffer,
                                             cinfo.output_width);
                                break;
diff -cr DirectFB-0.9.16/interfaces/IDirectFBVideoProvider/idirectfbvideoprovider_libmpeg3.c DirectFB-0.9.16.new/interfaces/IDirectFBVideoProvider/idirectfbvideoprovider_libmpeg3.c
*** DirectFB-0.9.16/interfaces/IDirectFBVideoProvider/idirectfbvideoprovider_libmpeg3.c	Sun Dec 29 01:17:05 2002
--- DirectFB-0.9.16.new/interfaces/IDirectFBVideoProvider/idirectfbvideoprovider_libmpeg3.c	Sat Mar  1 18:06:54 2003
***************
*** 335,340 ****
--- 335,341 ----
                 break;
  
            case DSPF_ARGB1555:
+           case DSPF_ARGB1555R:
                 for (i=off_y; i<data->dest_clip.h; i++) {
                      RGB888_to_ARGB1555( ptr, data->rgb.lines[i] + off_x * 4,
                                          data->dest_clip.w );
***************
*** 738,743 ****
--- 739,745 ----
  
            case DSPF_RGB332:
            case DSPF_ARGB1555:
+           case DSPF_ARGB1555R:
            case DSPF_RGB16:
            case DSPF_RGB24:
            case DSPF_RGB32:
diff -cr DirectFB-0.9.16/interfaces/IDirectFBVideoProvider/idirectfbvideoprovider_v4l.c DirectFB-0.9.16.new/interfaces/IDirectFBVideoProvider/idirectfbvideoprovider_v4l.c
*** DirectFB-0.9.16/interfaces/IDirectFBVideoProvider/idirectfbvideoprovider_v4l.c	Sun Dec 29 01:17:05 2002
--- DirectFB-0.9.16.new/interfaces/IDirectFBVideoProvider/idirectfbvideoprovider_v4l.c	Sat Mar  1 18:06:37 2003
***************
*** 623,628 ****
--- 623,629 ----
                 palette = VIDEO_PALETTE_YUV420P;
                 break;
            case DSPF_ARGB1555:
+           case DSPF_ARGB1555R:
                 bpp = 15;
                 palette = VIDEO_PALETTE_RGB555;
                 break;
***************
*** 754,759 ****
--- 755,761 ----
                 palette = VIDEO_PALETTE_YUV420P;
                 break;
            case DSPF_ARGB1555:
+           case DSPF_ARGB1555R:
                 bpp = 15;
                 palette = VIDEO_PALETTE_RGB555;
                 break;
diff -cr DirectFB-0.9.16/src/core/fbdev/fbdev.c DirectFB-0.9.16.new/src/core/fbdev/fbdev.c
*** DirectFB-0.9.16/src/core/fbdev/fbdev.c	Sun Jan  5 19:11:58 2003
--- DirectFB-0.9.16.new/src/core/fbdev/fbdev.c	Sat Mar  1 19:13:18 2003
***************
*** 1260,1269 ****
                 break;
  #endif
                 return DSPF_LUT8;
!           case 15:
                 if (dfb_fbdev_compatible_format( var, 0, 5, 5, 5, 0, 10, 5, 0 ) |
                     dfb_fbdev_compatible_format( var, 1, 5, 5, 5,15, 10, 5, 0 ) )
                      return DSPF_ARGB1555;
  
                 break;
  
--- 1260,1272 ----
                 break;
  #endif
                 return DSPF_LUT8;
!         case 15:
                 if (dfb_fbdev_compatible_format( var, 0, 5, 5, 5, 0, 10, 5, 0 ) |
                     dfb_fbdev_compatible_format( var, 1, 5, 5, 5,15, 10, 5, 0 ) )
                      return DSPF_ARGB1555;
+                
+                if (dfb_fbdev_compatible_format( var, 1, 5, 5, 5,15,  0, 5, 10 ) )
+                     return DSPF_ARGB1555R;
  
                 break;
  
***************
*** 1271,1276 ****
--- 1274,1282 ----
                 if (dfb_fbdev_compatible_format( var, 0, 5, 5, 5, 0, 10, 5, 0 ) |
                     dfb_fbdev_compatible_format( var, 1, 5, 5, 5,15, 10, 5, 0 ) )
                      return DSPF_ARGB1555;
+                
+                if (dfb_fbdev_compatible_format( var, 1, 5, 5, 5,15,  0, 5, 10 ) )
+                     return DSPF_ARGB1555R;
  
                 if (dfb_fbdev_compatible_format( var, 0, 5, 6, 5, 0, 11, 5, 0 ))
                      return DSPF_RGB16;
***************
*** 1383,1388 ****
--- 1389,1405 ----
                      var.blue.offset   = 0;
                      break;
       
+                case DSPF_ARGB1555R:
+                     var.transp.length = 1;
+                     var.red.length    = 5;
+                     var.green.length  = 5;
+                     var.blue.length   = 5;
+                     var.transp.offset = 15;
+                     var.red.offset    = 0;
+                     var.green.offset  = 5;
+                     var.blue.offset   = 10;
+                     break;
+ 
                 case DSPF_RGB16:
                      var.red.length    = 5;
                      var.green.length  = 6;
***************
*** 1706,1711 ****
--- 1723,1729 ----
  
       switch (format) {
            case DSPF_ARGB1555:
+           case DSPF_ARGB1555R:
                 red_size   = 32;
                 green_size = 32;
                 blue_size  = 32;
diff -cr DirectFB-0.9.16/src/core/input.c DirectFB-0.9.16.new/src/core/input.c
*** DirectFB-0.9.16/src/core/input.c	Sun Dec 29 01:17:06 2002
--- DirectFB-0.9.16.new/src/core/input.c	Sat Mar  1 16:53:11 2003
***************
*** 1288,1293 ****
--- 1288,1294 ----
  
            switch (surface->format) {
                 case DSPF_ARGB1555:
+                case DSPF_ARGB1555R:
                      span_rgb15_to_rgb32( data, buf32, surface->width );
                      break;
                 case DSPF_RGB16:
diff -cr DirectFB-0.9.16/src/core/surfaces.c DirectFB-0.9.16.new/src/core/surfaces.c
*** DirectFB-0.9.16/src/core/surfaces.c	Sun Dec 29 01:17:06 2002
--- DirectFB-0.9.16.new/src/core/surfaces.c	Sat Mar  1 16:52:30 2003
***************
*** 680,685 ****
--- 680,686 ----
            case DSPF_A8:
            case DSPF_ARGB:
            case DSPF_ARGB1555:
+           case DSPF_ARGB1555R:
            case DSPF_I420:
            case DSPF_RGB16:
            case DSPF_RGB24:
diff -cr DirectFB-0.9.16/src/gfx/convert.c DirectFB-0.9.16.new/src/gfx/convert.c
*** DirectFB-0.9.16/src/gfx/convert.c	Sun Dec 29 01:17:06 2002
--- DirectFB-0.9.16.new/src/gfx/convert.c	Sat Mar  1 18:39:24 2003
***************
*** 58,71 ****
                      __u8 r, __u8 g, __u8 b )
  {
       __u32 pixel;
! 
       switch (format) {
  #ifdef SUPPORT_RGB332
            case DSPF_RGB332:
                 pixel = PIXEL_RGB332( r, g, b );
                 break;
  #endif
!           case DSPF_ARGB1555:
                 pixel = PIXEL_RGB15( r, g, b );
                 break;
            case DSPF_RGB16:
--- 58,72 ----
                      __u8 r, __u8 g, __u8 b )
  {
       __u32 pixel;
! printf("dfb_color_to_pixel\n");
       switch (format) {
  #ifdef SUPPORT_RGB332
            case DSPF_RGB332:
                 pixel = PIXEL_RGB332( r, g, b );
                 break;
  #endif
! 		    case DSPF_ARGB1555:
! 		    case DSPF_ARGB1555R:
                 pixel = PIXEL_RGB15( r, g, b );
                 break;
            case DSPF_RGB16:
diff -cr DirectFB-0.9.16/src/gfx/convert.h DirectFB-0.9.16.new/src/gfx/convert.h
*** DirectFB-0.9.16/src/gfx/convert.h	Sun Dec 29 01:17:06 2002
--- DirectFB-0.9.16.new/src/gfx/convert.h	Sat Mar  1 18:38:35 2003
***************
*** 45,50 ****
--- 45,55 ----
                                   (((g)&0xF8) << 2) | \
                                   (((b)&0xF8) >> 3) )
  
+ #define PIXEL_ARGB1555R(a,r,g,b)( (((a)&0x80) << 8) | \
+                                   (((b)&0xF8) << 7) | \
+                                   (((g)&0xF8) << 2) | \
+                                   (((r)&0xF8) >> 3) )
+ 
  #define PIXEL_RGB15(r,g,b)     ( (((r)&0xF8) << 7) | \
                                   (((g)&0xF8) << 2) | \
                                   (((b)&0xF8) >> 3) )
diff -cr DirectFB-0.9.16/src/gfx/generic/generic.c DirectFB-0.9.16.new/src/gfx/generic/generic.c
*** DirectFB-0.9.16/src/gfx/generic/generic.c	Sun Dec 29 01:17:07 2002
--- DirectFB-0.9.16.new/src/gfx/generic/generic.c	Sat Mar  1 19:25:28 2003
***************
*** 212,218 ****
       Cop_to_Aop_32,
       Cop_to_Aop_8,
       Cop_to_Aop_8,
!      Cop_to_Aop_8
  };
  
  /********************************* Cop_toK_Aop_PFI ****************************/
--- 212,219 ----
       Cop_to_Aop_32,
       Cop_to_Aop_8,
       Cop_to_Aop_8,
!      Cop_to_Aop_8,
!      Cop_to_Aop_16
  };
  
  /********************************* Cop_toK_Aop_PFI ****************************/
***************
*** 273,279 ****
       NULL,
       NULL,
       NULL,
!      Cop_toK_Aop_8
  };
  
  /********************************* Bop_PFI_to_Aop_PFI *************************/
--- 274,281 ----
       NULL,
       NULL,
       NULL,
!      Cop_toK_Aop_8,
!      Cop_toK_Aop_16
  };
  
  /********************************* Bop_PFI_to_Aop_PFI *************************/
***************
*** 314,320 ****
       Bop_16_to_Aop,      /* DSPF_UYVY */
       Bop_8_to_Aop,       /* DSPF_I420 */
       Bop_8_to_Aop,       /* DSPF_YV12 */
!      Bop_8_to_Aop        /* DSPF_LUT8 */
  };
  
  /********************************* Bop_PFI_Kto_Aop_PFI ************************/
--- 316,323 ----
       Bop_16_to_Aop,      /* DSPF_UYVY */
       Bop_8_to_Aop,       /* DSPF_I420 */
       Bop_8_to_Aop,       /* DSPF_YV12 */
!      Bop_8_to_Aop,        /* DSPF_LUT8 */
!      Bop_16_to_Aop      /* DSPF_ARGB1555R */
  };
  
  /********************************* Bop_PFI_Kto_Aop_PFI ************************/
***************
*** 541,547 ****
       NULL,
       NULL,
       NULL,
!      Bop_8_Kto_Aop
  };
  
  /********************************* Bop_PFI_Sto_Aop ****************************/
--- 544,551 ----
       NULL,
       NULL,
       NULL,
!      Bop_8_Kto_Aop,
!      Bop_rgb15_Kto_Aop
  };
  
  /********************************* Bop_PFI_Sto_Aop ****************************/
***************
*** 633,639 ****
       NULL,
       NULL,
       NULL,
!      Bop_8_Sto_Aop
  };
  
  /********************************* Bop_PFI_SKto_Aop ***************************/
--- 637,644 ----
       NULL,
       NULL,
       NULL,
!      Bop_8_Sto_Aop,
!      Bop_16_Sto_Aop
  };
  
  /********************************* Bop_PFI_SKto_Aop ***************************/
***************
*** 780,786 ****
       NULL,
       NULL,
       NULL,
!      Bop_8_SKto_Aop
  };
  
  /********************************* Sop_PFI_Sto_Dacc ***************************/
--- 785,792 ----
       NULL,
       NULL,
       NULL,
!      Bop_8_SKto_Aop,
!      Bop_rgb15_SKto_Aop
  };
  
  /********************************* Sop_PFI_Sto_Dacc ***************************/
***************
*** 811,816 ****
--- 817,844 ----
       }
  }
  
+ static void Sop_argb1555r_Sto_Dacc()
+ {
+      int    w = Dlength;
+      int    i = 0;
+ 
+      Accumulator *D = Dacc;
+      __u16       *S = (__u16*)Sop;
+ 
+      while (w--) {
+           __u16 s = S[i>>16];
+ 
+           D->a = (s & 0x8000) ? 0xff : 0;
+           D->r = (s & 0x001F) << 3;
+           D->g = (s & 0x03E0) >> 2;
+           D->b = (s & 0x7C00) >> 7;
+ 
+           i += SperD;
+ 
+           D++;
+      }
+ }
+ 
  static void Sop_rgb16_Sto_Dacc()
  {
       int    w = Dlength;
***************
*** 986,992 ****
       NULL,
       NULL,
       NULL,
!      Sop_lut8_Sto_Dacc
  };
  
  /********************************* Sop_PFI_SKto_Dacc **************************/
--- 1014,1021 ----
       NULL,
       NULL,
       NULL,
!      Sop_lut8_Sto_Dacc,
!      Sop_argb1555r_Sto_Dacc
  };
  
  /********************************* Sop_PFI_SKto_Dacc **************************/
***************
*** 1017,1022 ****
--- 1046,1077 ----
       }
  }
  
+ static void Sop_argb1555r_SKto_Dacc()
+ {
+      int    w = Dlength;
+      int    i = 0;
+ 
+      Accumulator *D = Dacc;
+      __u16       *S = (__u16*)Sop;
+ 
+      while (w--) {
+           __u16 s = S[i>>16];
+ 
+           if ((s & 0x7FFF) != Skey) {
+                D->a = (s & 0x8000) ? 0xff : 0;
+                D->r = (s & 0x001F) << 3;
+                D->g = (s & 0x03E0) >> 2;
+                D->b = (s & 0x7C00) >> 7;
+           }
+           else
+                D->a = 0xF000;
+ 
+           i += SperD;
+ 
+           D++;
+      }
+ }
+ 
  static void Sop_rgb16_SKto_Dacc()
  {
       int    w = Dlength;
***************
*** 1161,1167 ****
       NULL,
       NULL,
       NULL,
!      NULL
  };
  
  /********************************* Sop_PFI_to_Dacc ****************************/
--- 1216,1223 ----
       NULL,
       NULL,
       NULL,
!      NULL,
!      Sop_argb1555r_SKto_Dacc
  };
  
  /********************************* Sop_PFI_to_Dacc ****************************/
***************
*** 1234,1239 ****
--- 1290,1356 ----
       }
  }
  
+ static void Sop_argb1555r_to_Dacc()
+ {
+      int       l, w = Dlength;
+      Accumulator *D = Dacc;
+      __u16       *S = (__u16*)Sop;
+ 
+      if (((long)S)&2) {
+           __u16 spixel = *S;
+ 
+           D->a = (spixel & 0x8000) ? 0xff : 0;
+           D->r = (spixel & 0x001F) << 3;
+           D->g = (spixel & 0x03E0) >> 2;
+           D->b = (spixel & 0x7C00) >> 7;
+ 
+           ++S;
+           ++D;
+           --w;
+      }
+ 
+      l = w >> 1;
+      while (l) {
+           __u32 spixel2 = *((__u32*)S);
+ 
+ #ifdef WORDS_BIGENDIAN
+           D[0].a = 0xFF;
+           D[0].r = (spixel2 & 0x001F0000) >> 13;
+           D[0].g = (spixel2 & 0x03E00000) >> 18;
+           D[0].b = (spixel2 & 0x7C000000) >> 23;
+ 
+           D[1].a = 0xFF;
+           D[1].r = (spixel2 & 0x001F) << 3;
+           D[1].g = (spixel2 & 0x03E0) >> 2;
+           D[1].b = (spixel2 & 0x7C00) >> 7;
+ #else
+           D[0].a = 0xFF;
+           D[0].r = (spixel2 & 0x001F) << 3;
+           D[0].g = (spixel2 & 0x03E0) >> 2;
+           D[0].b = (spixel2 & 0x7C00) >> 7;
+ 
+           D[1].a = 0xFF;
+           D[1].r = (spixel2 & 0x001F0000) >> 13;
+           D[1].g = (spixel2 & 0x03E00000) >> 18;
+           D[1].b = (spixel2 & 0x7C000000) >> 23;
+ #endif
+ 
+           S += 2;
+           D += 2;
+ 
+           --l;
+      }
+ 
+      if (w&1) {
+           __u16 spixel = *S;
+ 
+           D->a = 0xFF;
+           D->r = (spixel & 0x001F) << 3;
+           D->g = (spixel & 0x03E0) >> 2;
+           D->b = (spixel & 0x7C00) >> 7;
+      }
+ }
+ 
  static void Sop_rgb16_to_Dacc()
  {
       int       l, w = Dlength;
***************
*** 1442,1448 ****
       NULL,
       NULL,
       NULL,
!      Sop_lut8_to_Dacc
  };
  
  /********************************* Sop_PFI_Kto_Dacc ***************************/
--- 1559,1566 ----
       NULL,
       NULL,
       NULL,
!      Sop_lut8_to_Dacc,
!      Sop_argb1555r_to_Dacc,
  };
  
  /********************************* Sop_PFI_Kto_Dacc ***************************/
***************
*** 1469,1474 ****
--- 1587,1614 ----
       }
  }
  
+ static void Sop_argb1555r_Kto_Dacc()
+ {
+      int          w = Dlength;
+      Accumulator *D = Dacc;
+      __u16       *S = (__u16*)Sop;
+ 
+      while (w--) {
+           __u16 s = *S++;
+ 
+           if ((s & 0x7FFF) != Skey) {
+                D->a = (s & 0x8000) ? 0xff : 0;
+                D->r = (s & 0x001F) << 3;
+                D->g = (s & 0x03E0) >> 2;
+                D->b = (s & 0x7C00) >> 7;
+           }
+           else
+                D->a = 0xF000;
+ 
+           D++;
+      }
+ }
+ 
  static void Sop_rgb16_Kto_Dacc()
  {
       int          w = Dlength;
***************
*** 1618,1624 ****
       NULL,
       NULL,
       NULL,
!      NULL
  };
  
  /********************************* Sacc_to_Aop_PFI ****************************/
--- 1758,1765 ----
       NULL,
       NULL,
       NULL,
!      NULL,
!      Sop_argb1555r_Kto_Dacc
  };
  
  /********************************* Sacc_to_Aop_PFI ****************************/
***************
*** 1647,1652 ****
--- 1788,1812 ----
       }
  }
  
+ static void Sacc_to_Aop_argb1555r()
+ {
+      int          w = Dlength;
+      Accumulator *S = Sacc;
+      __u16       *D = (__u16*)Aop;
+ 
+      while (w--) {
+           if (!(S->a & 0xF000)) {
+                *D = PIXEL_ARGB1555R( (S->a & 0xFF00) ? 0xFF : S->a,
+                                     (S->r & 0xFF00) ? 0xFF : S->r,
+                                     (S->g & 0xFF00) ? 0xFF : S->g,
+                                     (S->b & 0xFF00) ? 0xFF : S->b );
+           }
+ 
+           D++;
+           S++;
+      }
+ }
+ 
  static void Sacc_to_Aop_rgb16()
  {
       int          l;
***************
*** 1842,1848 ****
       NULL,
       NULL,
       NULL,
!      Sacc_to_Aop_lut8
  };
  
  /************** Bop_a8_set_alphapixel_Aop_PFI *********************************/
--- 2002,2009 ----
       NULL,
       NULL,
       NULL,
!      Sacc_to_Aop_lut8,
!      Sacc_to_Aop_argb1555r
  };
  
  /************** Bop_a8_set_alphapixel_Aop_PFI *********************************/
***************
*** 2105,2111 ****
       NULL,
       NULL,
       NULL,
!      Bop_a8_set_alphapixel_Aop_lut8
  };
  
  
--- 2266,2273 ----
       NULL,
       NULL,
       NULL,
!      Bop_a8_set_alphapixel_Aop_lut8,
!      Bop_a8_set_alphapixel_Aop_argb1555
  };
  
  
***************
*** 2619,2624 ****
--- 2781,2789 ----
            case DSPF_ARGB1555:
                 Cop = PIXEL_ARGB1555( color.a, color.r, color.g, color.b );
                 break;
+           case DSPF_ARGB1555R:
+                Cop = PIXEL_ARGB1555R( color.a, color.r, color.g, color.b );
+                break;
            case DSPF_RGB16:
                 Cop = PIXEL_RGB16( color.r, color.g, color.b );
                 break;
***************
*** 2674,2679 ****
--- 2839,2845 ----
       if (DFB_BLITTING_FUNCTION( accel )) {
            switch (src_format) {
                 case DSPF_ARGB1555:
+                case DSPF_ARGB1555R:
                 case DSPF_RGB16:
                 case DSPF_RGB24:
                 case DSPF_RGB32:
diff -cr DirectFB-0.9.16/src/idirectfb.c DirectFB-0.9.16.new/src/idirectfb.c
*** DirectFB-0.9.16/src/idirectfb.c	Sun Dec 29 01:17:05 2002
--- DirectFB-0.9.16.new/src/idirectfb.c	Sat Mar  1 16:34:16 2003
***************
*** 381,387 ****
       switch (format) {
            case DSPF_A8:
            case DSPF_ARGB:
!           case DSPF_ARGB1555:
            case DSPF_I420:
            case DSPF_LUT8:
            case DSPF_RGB16:
--- 381,388 ----
       switch (format) {
            case DSPF_A8:
            case DSPF_ARGB:
! 		    case DSPF_ARGB1555:
! 		    case DSPF_ARGB1555R:
            case DSPF_I420:
            case DSPF_LUT8:
            case DSPF_RGB16:
diff -cr DirectFB-0.9.16/src/misc/conf.c DirectFB-0.9.16.new/src/misc/conf.c
*** DirectFB-0.9.16/src/misc/conf.c	Sun Dec 29 01:17:07 2002
--- DirectFB-0.9.16.new/src/misc/conf.c	Sat Mar  1 16:56:23 2003
***************
*** 156,173 ****
  } FormatString;
   
  static const FormatString format_strings[] = {
!      { "A8",       DSPF_A8       },
!      { "ARGB",     DSPF_ARGB     },
!      { "ARGB1555", DSPF_ARGB1555 },
!      { "I420",     DSPF_I420     },
!      { "LUT8",     DSPF_LUT8     },
!      { "RGB16",    DSPF_RGB16    },
!      { "RGB24",    DSPF_RGB24    },
!      { "RGB32",    DSPF_RGB32    },
!      { "RGB332",   DSPF_RGB332   },
!      { "UYVY",     DSPF_UYVY     },
!      { "YUY2",     DSPF_YUY2     },
!      { "YV12",     DSPF_YV12     }
  };
  
  #define NUM_FORMAT_STRINGS (sizeof(format_strings) / sizeof(FormatString))
--- 156,174 ----
  } FormatString;
   
  static const FormatString format_strings[] = {
!      { "A8",        DSPF_A8        },
!      { "ARGB",      DSPF_ARGB      },
!      { "ARGB1555",  DSPF_ARGB1555  },
!      { "ARGB1555R", DSPF_ARGB1555R },
!      { "I420",      DSPF_I420      },
!      { "LUT8",      DSPF_LUT8      },
!      { "RGB16",     DSPF_RGB16     },
!      { "RGB24",     DSPF_RGB24     },
!      { "RGB32",     DSPF_RGB32     },
!      { "RGB332",    DSPF_RGB332    },
!      { "UYVY",      DSPF_UYVY      },
!      { "YUY2",      DSPF_YUY2      },
!      { "YV12",      DSPF_YV12      }
  };
  
  #define NUM_FORMAT_STRINGS (sizeof(format_strings) / sizeof(FormatString))
diff -cr DirectFB-0.9.16/src/misc/gfx_util.c DirectFB-0.9.16.new/src/misc/gfx_util.c
*** DirectFB-0.9.16/src/misc/gfx_util.c	Sun Dec 29 01:17:07 2002
--- DirectFB-0.9.16.new/src/misc/gfx_util.c	Sat Mar  1 18:21:49 2003
***************
*** 94,99 ****
--- 94,103 ----
            *((__u16*)dst) = PIXEL_ARGB1555( a, r, g, b );
            break;
  
+      case DSPF_ARGB1555R:
+           *((__u16*)dst) = PIXEL_ARGB1555R( a, r, g, b );
+           break;
+ 
       case DSPF_RGB32:
            *((__u32*)dst) = PIXEL_RGB32( r, g, b );
            break;
diff -cr DirectFB-0.9.16/tools/dfbdump.c DirectFB-0.9.16.new/tools/dfbdump.c
*** DirectFB-0.9.16/tools/dfbdump.c	Sun Dec 29 01:17:07 2002
--- DirectFB-0.9.16.new/tools/dfbdump.c	Sat Mar  1 18:23:15 2003
***************
*** 75,80 ****
--- 75,84 ----
                 printf( "ARGB1555 " );
                 break;
  
+           case DSPF_ARGB1555R:
+                printf( "ARGB155R " );
+                break;
+           
            case DSPF_I420:
                 printf( "I420     " );
                 break;
diff -cr DirectFB-0.9.16/tools/directfb-csource.c DirectFB-0.9.16.new/tools/directfb-csource.c
*** DirectFB-0.9.16/tools/directfb-csource.c	Tue Jan 14 17:29:06 2003
--- DirectFB-0.9.16.new/tools/directfb-csource.c	Sat Mar  1 18:08:18 2003
***************
*** 48,61 ****
       DFBSurfacePixelFormat  format;
       const char             *name;
  } pixelformats[] = {
!      { DSPF_ARGB,     "ARGB"     },
!      { DSPF_ARGB1555, "ARGB1555" },
!      { DSPF_RGB32,    "RGB32"    },
!      { DSPF_RGB24,    "RGB24"    },
!      { DSPF_RGB16,    "RGB16"    },
!      { DSPF_RGB332,   "RGB332"   },
!      { DSPF_A8,       "A8"       },
!      { DSPF_LUT8,     "LUT8"     }
  };
  static int n_pixelformats = sizeof (pixelformats) / sizeof (pixelformats[0]);
  
--- 48,62 ----
       DFBSurfacePixelFormat  format;
       const char             *name;
  } pixelformats[] = {
!      { DSPF_ARGB,      "ARGB"      },
!      { DSPF_ARGB1555,  "ARGB1555"  },
!      { DSPF_ARGB1555R, "ARGB1555R" },
!      { DSPF_RGB32,     "RGB32"     },
!      { DSPF_RGB24,     "RGB24"     },
!      { DSPF_RGB16,     "RGB16"     },
!      { DSPF_RGB332,    "RGB332"    },
!      { DSPF_A8,        "A8"        },
!      { DSPF_LUT8,      "LUT8"      }
  };
  static int n_pixelformats = sizeof (pixelformats) / sizeof (pixelformats[0]);
  
***************
*** 348,353 ****
--- 349,355 ----
                           span_rgb32_to_rgb16 ((__u32 *) s, (__u16 *) d, width);
                      break;
                 case DSPF_ARGB1555:
+                case DSPF_ARGB1555R:
                      for (s = data, d = dest; h; h--, s += pitch, d += d_pitch)
                           span_rgb32_to_argb1555 ((__u32 *) s, (__u16 *) d, width);
                      break;

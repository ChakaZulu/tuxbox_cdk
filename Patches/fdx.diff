diff -Naur linux-2.4.36.2/arch/ppc/8xx_io/enet.c linux-2.4.36.2_new/arch/ppc/8xx_io/enet.c
--- linux-2.4.36.2/arch/ppc/8xx_io/enet.c	2008-02-24 21:38:03.000000000 +0100
+++ linux-2.4.36.2_new/arch/ppc/8xx_io/enet.c	2008-04-16 01:51:47.000000000 +0200
@@ -84,6 +84,12 @@
  * All functions are directly controlled using I/O pins.  See <asm/commproc.h>.
  */
 
+//The full-duplex part-1-start
+//to activate /var/tuxbox/config/boot.conf insert dbox_duplex=1
+//http://wiki.dbox2-tuning.net/wiki/index.php/FullDuplexUmbau
+static int duplex_mode=0;
+//The full-duplex part-1-end
+
 /* The transmitter timeout
  */
 #define TX_TIMEOUT	(2*HZ)
@@ -703,6 +709,13 @@
 #error Exactly ONE pair of PA_ENET_[RT]XD, PB_ENET_[RT]XD must be defined
 #endif
 
+#if defined(PA_ENET_LBK)
+	/* Disable Loopback */
+	immap->im_ioport.iop_papar &= ~PA_ENET_LBK;
+	immap->im_ioport.iop_padir |=  PA_ENET_LBK;
+	immap->im_ioport.iop_padat &= ~PA_ENET_LBK;
+#endif /* PA_ENET_LBK */(
+
 #if defined(PC_ENET_LBK)
 	/* Configure port C pins to disable External Loopback
 	 */
@@ -714,7 +727,15 @@
 
 	/* Configure port C pins to enable CLSN and RENA.
 	*/
-	immap->im_ioport.iop_pcpar &= ~(PC_ENET_CLSN | PC_ENET_RENA);
+	if (duplex_mode==2)
+	{
+		immap->im_ioport.iop_pcpar &= ~PC_ENET_RENA;
+		immap->im_ioport.iop_pcpar |=  PC_ENET_CLSN; // Disable CLSN pin
+	}
+	else
+	{
+		immap->im_ioport.iop_pcpar &= ~(PC_ENET_CLSN | PC_ENET_RENA);
+	}
 	immap->im_ioport.iop_pcdir &= ~(PC_ENET_CLSN | PC_ENET_RENA);
 	immap->im_ioport.iop_pcso  |=  (PC_ENET_CLSN | PC_ENET_RENA);
 
@@ -890,7 +911,22 @@
 	/* Set processing mode.  Use Ethernet CRC, catch broadcast, and
 	 * start frame search 22 bit times after RENA.
 	 */
-	sccp->scc_pmsr = (SCC_PMSR_ENCRC | SCC_PMSR_NIB22);
+	//The full-duplex part-2-start
+	//sccp->scc_pmsr = (SCC_PMSR_ENCRC | SCC_PMSR_NIB22);
+	if (duplex_mode==0)
+	{
+		sccp->scc_pmsr = (SCC_PMSR_ENCRC | SCC_PMSR_NIB22);
+		printk(KERN_INFO "half-duplex mode enabled\n");
+	}
+	else
+	{
+		sccp->scc_pmsr = (SCC_PMSR_ENCRC | SCC_PMSR_NIB22 | SCC_PMSR_LPB | SCC_PMSR_FDE);
+		if (duplex_mode==2)
+			printk(KERN_INFO "forced full-duplex mode enabled\n");
+		else
+			printk(KERN_INFO "full-duplex mode enabled\n");
+	}
+	//The full-duplex part-2-end
 
 	/* It is now OK to enable the Ethernet transmitter.
 	 * Unfortunately, there are board implementation differences here.
@@ -961,3 +997,15 @@
 
 	return 0;
 }
+
+//The full-duplex part-3-start
+#ifndef MODULE
+static int __init duplex_mode_setup(char *str)
+{
+	duplex_mode = simple_strtol(str, NULL, 0);
+	return 1;
+}
+
+	__setup("dbox_duplex=", duplex_mode_setup);
+#endif
+//The full-duplex part-3-end
diff -Naur linux-2.4.36.2/include/asm-ppc/commproc.h linux-2.4.36.2_new/include/asm-ppc/commproc.h
--- linux-2.4.36.2/include/asm-ppc/commproc.h	2008-02-24 21:38:03.000000000 +0100
+++ linux-2.4.36.2_new/include/asm-ppc/commproc.h	2008-04-16 01:52:53.000000000 +0200
@@ -473,6 +473,7 @@
 #define PA_ENET_RXD	((ushort)0x0004)
 #define PA_ENET_TXD	((ushort)0x0008)
 #define PA_ENET_RCLK	((ushort)0x0200)
+#define PA_ENET_LBK	((ushort)0x0400)
 #define PA_ENET_TCLK	((ushort)0x0800)
 
 #define PC_ENET_TENA	((ushort)0x0002)

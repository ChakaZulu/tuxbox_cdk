diff -Naur freetype-2.1.4.orig/builds/unix/freetype-config.in freetype-2.1.4/builds/unix/freetype-config.in
--- freetype-2.1.4.orig/builds/unix/freetype-config.in	Mon Dec 16 22:51:23 2002
+++ freetype-2.1.4/builds/unix/freetype-config.in	Sun Apr 13 16:41:28 2003
@@ -80,11 +80,7 @@
 
 if test "$echo_cflags" = "yes" ; then
  cflags="-I@includedir@/freetype2"
- if test "@includedir@" != "/usr/include" ; then
-  echo -I@includedir@ $cflags
- else
   echo $cflags
- fi
 fi
 
 if test "$echo_libs" = "yes" ; then
diff -Naur freetype-2.1.4.orig/src/winfonts/winfnt.c freetype-2.1.4/src/winfonts/winfnt.c
--- freetype-2.1.4.orig/src/winfonts/winfnt.c	Thu Mar 20 08:04:40 2003
+++ freetype-2.1.4/src/winfonts/winfnt.c	Wed Jan 15 23:48:26 2003
@@ -618,18 +618,32 @@
 
     /* allocate and build bitmap */
     {
+      FT_Memory  memory = FT_FACE_MEMORY( slot->face );
       FT_Int     pitch  = ( bitmap->width + 7 ) >> 3;
+      FT_Byte*   column;
+      FT_Byte*   write;
 
 
       bitmap->pitch      = pitch;
       bitmap->rows       = font->header.pixel_height;
       bitmap->pixel_mode = FT_PIXEL_MODE_MONO;
 
-      /* note: we don't allocate a new buffer for the bitmap since we */
-      /*       already store the images in the FT_Face                */
-      ft_glyphslot_set_bitmap( slot, p );
+      if ( FT_ALLOC( bitmap->buffer, pitch * bitmap->rows ) )
+        goto Exit;
+
+      column = (FT_Byte*)bitmap->buffer;
+
+      for ( ; pitch > 0; pitch--, column++ )
+      {
+        FT_Byte*  limit = p + bitmap->rows;
+
+
+        for ( write = column; p < limit; p++, write += bitmap->pitch )
+          write[0] = p[0];
+      }
     }
 
+    slot->flags       = FT_GLYPH_OWN_BITMAP;
     slot->bitmap_left = 0;
     slot->bitmap_top  = font->header.ascent;
     slot->format      = FT_GLYPH_FORMAT_BITMAP;

diff -Naur glib-2.0.7.orig/configure.in glib-2.0.7/configure.in
--- glib-2.0.7.orig/configure.in	2002-11-04 21:17:05.000000000 +0100
+++ glib-2.0.7/configure.in	2004-03-15 01:54:24.000000000 +0100
@@ -15,7 +15,7 @@
 cflags_set=${CFLAGS+set}
 
 # we rewrite this file
-rm -f glibconfig-sysdefs.h
+#rm -f glibconfig-sysdefs.h
 
 GLIB_AC_DIVERT_BEFORE_HELP([
 #
@@ -401,24 +401,24 @@
 fi
 
 dnl DU4 native cc currently needs -std1 for ANSI mode (instead of K&R)
-AC_MSG_CHECKING([for extra flags to get ANSI library prototypes])
-glib_save_LIBS=$LIBS
-LIBS="$LIBS -lm"
-AC_TRY_RUN([#include <math.h>
-             int main (void) { return (log(1) != log(1.)); }],
-     AC_MSG_RESULT(none needed),
-     glib_save_CFLAGS=$CFLAGS
-     CFLAGS="$CFLAGS -std1"
-     AC_TRY_RUN([#include <math.h>
-                 int main (void) { return (log(1) != log(1.)); }],
-         AC_MSG_RESULT(-std1),
-         AC_MSG_RESULT()
-         CFLAGS=$glib_save_CFLAGS
-         AC_MSG_WARN(
-                [No ANSI prototypes found in library. (-std1 didn't work.)])
-     )
-)
-LIBS=$glib_save_LIBS
+#AC_MSG_CHECKING([for extra flags to get ANSI library prototypes])
+#glib_save_LIBS=$LIBS
+#LIBS="$LIBS -lm"
+#AC_TRY_RUN([#include <math.h>
+#             int main (void) { return (log(1) != log(1.)); }],
+#     AC_MSG_RESULT(none needed),
+#     glib_save_CFLAGS=$CFLAGS
+#     CFLAGS="$CFLAGS -std1"
+#     AC_TRY_RUN([#include <math.h>
+#                 int main (void) { return (log(1) != log(1.)); }],
+#         AC_MSG_RESULT(-std1),
+#         AC_MSG_RESULT()
+#         CFLAGS=$glib_save_CFLAGS
+#         AC_MSG_WARN(
+#                [No ANSI prototypes found in library. (-std1 didn't work.)])
+#     )
+#)
+#LIBS=$glib_save_LIBS
 
 dnl NeXTStep cc seems to need this
 AC_MSG_CHECKING([for extra flags for POSIX compliance])
@@ -462,32 +462,34 @@
 if test x$ac_cv_sizeof_long_long = x8; then
 	# long long is a 64 bit integer.
 	AC_MSG_CHECKING(for format to printf and scanf a gint64)
-	AC_CACHE_VAL(glib_cv_long_long_format,[
-		for format in ll q I64; do
-		  AC_TRY_RUN([#include <stdio.h>  
-			int main()
-			{
-			  long long b, a = -0x3AFAFAFAFAFAFAFALL;
-			  char buffer[1000];
-			  sprintf (buffer, "%${format}u", a);
-  			  sscanf (buffer, "%${format}u", &b);
-			  exit (b!=a);
-			}
-			],
-			glib_cv_long_long_format=${format}
-			break)
-		done])
-	if test -n "$glib_cv_long_long_format"; then
+	AC_CACHE_VAL(glib_cv_long_long_format,#[
+#		for format in ll q I64; do
+#		  AC_TRY_RUN([#include <stdio.h>  
+#			int main()
+#			{
+#			  long long b, a = -0x3AFAFAFAFAFAFAFALL;
+#			  char buffer[1000];
+#			  sprintf (buffer, "%${format}u", a);
+# 			  sscanf (buffer, "%${format}u", &b);
+#			  exit (b!=a);
+#			}
+#			],
+			glib_cv_long_long_format=ll
+#			break)
+#		done])
+		    )#		    ])
+
+#	if test -n "$glib_cv_long_long_format"; then
 	  AC_MSG_RESULT(%${glib_cv_long_long_format}u)
-        else
-	  AC_MSG_RESULT(none)
-        fi
-elif test x$ac_cv_sizeof___int64 = x8; then
-	# __int64 is a 64 bit integer.
-	AC_MSG_CHECKING(for format to printf and scanf a gint64)
-	# We know this is MSVC, and what the formats are
-	glib_cv_long_long_format=I64
-	AC_MSG_RESULT(%${glib_cv_long_long_format}u)
+#        else
+#	  AC_MSG_RESULT(none)
+#        fi
+#elif test x$ac_cv_sizeof___int64 = x8; then
+#	# __int64 is a 64 bit integer.
+#	AC_MSG_CHECKING(for format to printf and scanf a gint64)
+#	# We know this is MSVC, and what the formats are
+#	glib_cv_long_long_format=I64
+#	AC_MSG_RESULT(%${glib_cv_long_long_format}u)
 fi
 
 dnl long doubles were not used, and a portability problem
@@ -524,57 +526,57 @@
 dnl check in which direction the stack grows
 dnl
 AC_CACHE_CHECK([for growing stack pointer],glib_cv_stack_grows,[
-        AC_TRY_RUN([
-	volatile int *a = 0, *b = 0;
-	void foo (void);
-	int main () { volatile int y = 7; a = &y; foo (); return b > a; }
-	void foo (void) { volatile int x = 5; b = &x; }
-       	],
+#        AC_TRY_RUN([
+#	volatile int *a = 0, *b = 0;
+#	void foo (void);
+#	int main () { volatile int y = 7; a = &y; foo (); return b > a; }
+#	void foo (void) { volatile int x = 5; b = &x; }
+#       	],
 	glib_cv_stack_grows=no
-        ,
-	glib_cv_stack_grows=yes
-        ,)
+#        ,
+#	glib_cv_stack_grows=yes
+#        ,)
 ])
 
 dnl AC_C_INLINE is useless to us since it bails out too early, we need to
 dnl truely know which ones of `inline', `__inline' and `__inline__' are
 dnl actually supported.
 AC_CACHE_CHECK([for __inline],glib_cv_has__inline,[
-        AC_TRY_RUN([
-	__inline int foo () { return 0; }
-	int main () { return foo (); }
-       	],
+#    AC_TRY_RUN([
+#	__inline int foo () { return 0; }
+#	int main () { return foo (); }
+#  	],
 	glib_cv_has__inline=yes
-        ,
-	glib_cv_has__inline=no
-        ,)
+#        ,
+#	glib_cv_has__inline=no
+#        ,)
 ])
 case x$glib_cv_has__inline in
 xyes) AC_DEFINE(G_HAVE___INLINE,1,[Have __inline keyword])
 esac
 AC_CACHE_CHECK([for __inline__],glib_cv_has__inline__,[
-        AC_TRY_RUN([
-	__inline__ int foo () { return 0; }
-	int main () { return foo (); }
-       	],
+#        AC_TRY_RUN([
+#	__inline__ int foo () { return 0; }
+#	int main () { return foo (); }
+#       	],
 	glib_cv_has__inline__=yes
-        ,
-	glib_cv_has__inline__=no
-        ,)
+#        ,
+#	glib_cv_has__inline__=no
+#        ,)
 ])
 case x$glib_cv_has__inline__ in
 xyes) AC_DEFINE(G_HAVE___INLINE__,1,[Have __inline__ keyword])
 esac
 AC_CACHE_CHECK([for inline], glib_cv_hasinline,[
-        AC_TRY_RUN([
-	#undef inline
-	inline int foo () { return 0; }
-	int main () { return foo (); }
-       	],
+#        AC_TRY_RUN([
+#	#undef inline
+#	inline int foo () { return 0; }
+#	int main () { return foo (); }
+#       	],
 	glib_cv_hasinline=yes
-        ,
-	glib_cv_hasinline=no
-        ,)
+#        ,
+#	glib_cv_hasinline=no
+#        ,)
 ])
 case x$glib_cv_hasinline in
 xyes) AC_DEFINE(G_HAVE_INLINE,1,[Have inline keyword])
@@ -657,9 +659,10 @@
 #include <unistd.h>
 "]
 fi
-GLIB_SIZEOF([$size_includes], size_t, size_t)
-GLIB_SIZEOF([$size_includes], ptrdiff_t, ptrdiff_t)
-GLIB_SIZEOF([$size_includes], intmax_t, intmax_t)
+GLIB_SIZEOF([$size_includes], size_t, size_t,4)
+GLIB_SIZEOF([$size_includes], ptrdiff_t, ptrdiff_t,4)
+GLIB_SIZEOF([$size_includes], intmax_t, intmax_t,8)
+
 
 dnl Try to figure out whether gsize, gssize should be long or int
 AC_MSG_CHECKING([for the appropriate definition for size_t])
@@ -789,14 +792,16 @@
 
 dnl *** check for sane realloc() ***
 AC_CACHE_CHECK([whether realloc (NULL,) will work],glib_cv_sane_realloc,[
-        AC_TRY_RUN([
-        #include <stdlib.h>
-        int main() {
-          return realloc (0, sizeof (int)) == 0;
-        }],
-        [glib_cv_sane_realloc=yes],
-        [glib_cv_sane_realloc=no],
-	[])
+#        AC_TRY_RUN([
+#        #include <stdlib.h>
+#        int main() {
+#          return realloc (0, sizeof (int)) == 0;
+#        }],
+#        [
+	glib_cv_sane_realloc=yes
+#],
+#        [glib_cv_sane_realloc=no],
+#	[])
 ])
 if test x$glib_cv_sane_realloc = xyes; then
   AC_DEFINE(REALLOC_0_WORKS,1,[whether realloc (NULL,) works])
@@ -836,42 +841,44 @@
 dnl we currently check for all three va_copy possibilities, so we get
 dnl all results in config.log for bug reports.
 AC_CACHE_CHECK([for an implementation of va_copy()],glib_cv_va_copy,[
-	AC_TRY_RUN([
-	#include <stdarg.h>
-	void f (int i, ...) {
-	va_list args1, args2;
-	va_start (args1, i);
-	va_copy (args2, args1);
-	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
-	  exit (1);
-	va_end (args1); va_end (args2);
-	}
-	int main() {
-	  f (0, 42);
-	  return 0;
-	}],
-	[glib_cv_va_copy=yes],
-	[glib_cv_va_copy=no],
-	[])
+#	AC_TRY_RUN([
+#	#include <stdarg.h>
+#	void f (int i, ...) {
+#	va_list args1, args2;
+#	va_start (args1, i);
+#	va_copy (args2, args1);
+#	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
+#	  exit (1);
+#	va_end (args1); va_end (args2);
+#	}
+#	int main() {
+#	  f (0, 42);
+#	  return 0;
+#	}],
+	[glib_cv_va_copy=yes]
+	#,
+#	[glib_cv_va_copy=no],
+#	[])
 ])
 AC_CACHE_CHECK([for an implementation of __va_copy()],glib_cv___va_copy,[
-	AC_TRY_RUN([
+#	AC_TRY_RUN([
 	#include <stdarg.h>
-	void f (int i, ...) {
-	va_list args1, args2;
-	va_start (args1, i);
-	__va_copy (args2, args1);
-	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
-	  exit (1);
-	va_end (args1); va_end (args2);
-	}
-	int main() {
-	  f (0, 42);
-	  return 0;
-	}],
-	[glib_cv___va_copy=yes],
-	[glib_cv___va_copy=no],
-	[])
+#	void f (int i, ...) {
+#	va_list args1, args2;
+#	va_start (args1, i);
+#	__va_copy (args2, args1);
+#	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
+#	  exit (1);
+#	va_end (args1); va_end (args2);
+#	}
+#	int main() {
+#	  f (0, 42);
+#	  return 0;
+#	}],
+	[glib_cv___va_copy=yes]
+	#,
+#	[glib_cv___va_copy=no],
+#	[])
 ])
 
 if test "x$glib_cv_va_copy" = "xyes"; then
@@ -886,23 +893,24 @@
 fi
 
 AC_CACHE_CHECK([whether va_lists can be copied by value],glib_cv_va_val_copy,[
-	AC_TRY_RUN([
-	#include <stdarg.h>
-	void f (int i, ...) {
-	va_list args1, args2;
-	va_start (args1, i);
-	args2 = args1;
-	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
-	  exit (1);
-	va_end (args1); va_end (args2);
-	}
-	int main() {
-	  f (0, 42);
-	  return 0;
-	}],
-	[glib_cv_va_val_copy=yes],
-	[glib_cv_va_val_copy=no],
-	[])
+#	AC_TRY_RUN([
+#	#include <stdarg.h>
+#	void f (int i, ...) {
+#	va_list args1, args2;
+#	va_start (args1, i);
+#	args2 = args1;
+#	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
+#	  exit (1);
+#	va_end (args1); va_end (args2);
+#	}
+#	int main() {
+#	  f (0, 42);
+#	  return 0;
+#	}],
+	[glib_cv_va_val_copy=yes]
+	#,
+#	[glib_cv_va_val_copy=no],
+#	[])
 ])
 
 if test "x$glib_cv_va_val_copy" = "xno"; then
@@ -978,7 +986,7 @@
 dnl *** check for OSF1/5.0 RTLD_GLOBAL brokenness
 	AC_CACHE_CHECK([for RTLD_GLOBAL brokenness],
 		glib_cv_rtldglobal_broken,[
-		AC_TRY_RUN([
+#		AC_TRY_RUN([
 		#include <dlfcn.h>
                 #ifndef RTLD_GLOBAL
                 #define RTLD_GLOBAL 0
@@ -986,19 +994,20 @@
                 #ifndef RTLD_LAZY
                 #define RTLD_LAZY 0
                 #endif
-		int pthread_create;
-		int main () {
-		void *handle, *global, *local;
-		global = &pthread_create;
-		handle = dlopen ("libpthread.so", RTLD_GLOBAL | RTLD_LAZY);
-		if (!handle) return 0;
-		local = dlsym (handle, "pthread_create");
-		return global == local;
-		}],
-			[glib_cv_rtldglobal_broken=no],
-			[glib_cv_rtldglobal_broken=yes],
-			[])
-		rm -f plugin.c plugin.o plugin.lo
+#		int pthread_create;
+#		int main () {
+#		void *handle, *global, *local;
+#		global = &pthread_create;
+#		handle = dlopen ("libpthread.so", RTLD_GLOBAL | RTLD_LAZY);
+#		if (!handle) return 0;
+#		local = dlsym (handle, "pthread_create");
+#		return global == local;
+#		}],
+			[glib_cv_rtldglobal_broken=no]
+			#,
+#			[glib_cv_rtldglobal_broken=yes],
+#			[])
+#		rm -f plugin.c plugin.o plugin.lo
 	])
 	if test "x$glib_cv_rtldglobal_broken" = "xyes"; then
   		G_MODULE_BROKEN_RTLD_GLOBAL=1
@@ -1008,21 +1017,22 @@
 dnl *** check whether we need preceeding underscores
 	AC_CACHE_CHECK([for preceeding underscore in symbols],
 		glib_cv_uscore,[
-		AC_TRY_RUN([
-		#include <dlfcn.h>
-                int glib_underscore_test (void) { return 42; }
-		int main() {
-		  void *f1 = (void*)0, *f2 = (void*)0, *handle;
-		  handle = dlopen ((void*)0, 0);
-		  if (handle) {
-		    f1 = dlsym (handle, "glib_underscore_test");
-		    f2 = dlsym (handle, "_glib_underscore_test");
-		  } return (!f2 || f1);
-		}],
-			[glib_cv_uscore=yes],
-			[glib_cv_uscore=no],
-			[])
-		rm -f plugin.c plugin.$ac_objext plugin.lo
+#		AC_TRY_RUN([
+#		#include <dlfcn.h>
+#                int glib_underscore_test (void) { return 42; }
+#		int main() {
+#		  void *f1 = (void*)0, *f2 = (void*)0, *handle;
+#		  handle = dlopen ((void*)0, 0);
+#		  if (handle) {
+#		    f1 = dlsym (handle, "glib_underscore_test");
+#		    f2 = dlsym (handle, "_glib_underscore_test");
+#		  } return (!f2 || f1);
+#		}],
+#			[glib_cv_uscore=yes],
+			[glib_cv_uscore=no]
+			#,
+#			[])
+#		rm -f plugin.c plugin.$ac_objext plugin.lo
 	])
 	if test "x$glib_cv_uscore" = "xyes"; then
   		G_MODULE_NEED_USCORE=1
@@ -1338,14 +1348,15 @@
 		G_THREAD_LIBS="-pthread"
 		;;
              *)
-		for thread_lib in "" pthread pthread32 pthreads thread dce; do
-			if test x"$thread_lib" = x; then
-				add_thread_lib=""
-				IN=""
-			else
+		thread_lib="pthread"
+#		for thread_lib in "" pthread pthread32 pthreads thread dce; do
+#			if test x"$thread_lib" = x; then
+#				add_thread_lib=""
+#				IN=""
+#			else
 				add_thread_lib="-l$thread_lib"
 				IN=" in -l$thread_lib"
-			fi
+#			fi
 			if test x"$have_threads" = xposix; then
 				defattr=0
 			else
@@ -1355,50 +1366,55 @@
 			LIBS="$glib_save_LIBS $add_thread_lib"
 			
 			AC_MSG_CHECKING(for pthread_create/pthread_join$IN)
-			AC_TRY_RUN([#include <pthread.h> 
-				int check_me = 0;
-				void* func(void* data) {check_me = 42;}
-                                main()
-				{ pthread_t t; 
-				  void *ret;
-				  pthread_create (&t, $defattr, func, 0);
-				  pthread_join (t, &ret);
-				  exit (check_me != 42);
-				}],
-				[AC_MSG_RESULT(yes)
+#			AC_TRY_RUN([#include <pthread.h> 
+#				int check_me = 0;
+#				void* func(void* data) {check_me = 42;}
+#                                main()
+#				{ pthread_t t; 
+#				  void *ret;
+#				  pthread_create (&t, $defattr, func, 0);
+#				  pthread_join (t, &ret);
+#				  exit (check_me != 42);
+#				}],
+#				[
+				AC_MSG_RESULT(yes)
 				G_THREAD_LIBS="$add_thread_lib"
-				break],
-				[AC_MSG_RESULT(no)])
-		done
+#				break
+#				]
+				#,
+#				[AC_MSG_RESULT(no)])
+#		done
                 ;;
 	   esac 	
 	   if test "x$G_THREAD_LIBS" = xerror; then
              AC_MSG_ERROR($LIBS_NOT_FOUND_1$have_threads$LIBS_NOT_FOUND_2)
 	   fi
-	   for thread_lib in "" rt rte; do
+thread_lib=""
+#	   for thread_lib in "" rt rte; do
 	     if test x"$thread_lib" = x; then
 	       add_thread_lib=""
 	       IN=""
-	     else
-	       add_thread_lib="-l$thread_lib"
-	       IN=" in -l$thread_lib"
+#	     else
+#	       add_thread_lib="-l$thread_lib"
+#	       IN=" in -l$thread_lib"
 	     fi
 	     LIBS="$glib_save_LIBS $add_thread_lib"
 			
 	     AC_MSG_CHECKING(for sched_get_priority_min$IN)
-	     AC_TRY_RUN([#include <sched.h>
-		         #include <errno.h>
-			 int main() {
-    			 errno = 0;
-                         return sched_get_priority_min(SCHED_OTHER)==-1
-				&& errno != 0;}],
-			[AC_MSG_RESULT(yes)
+#	     AC_TRY_RUN([#include <sched.h>
+#		         #include <errno.h>
+#			 int main() {
+#    			 errno = 0;
+#                         return sched_get_priority_min(SCHED_OTHER)==-1
+#				&& errno != 0;}],
+#			[
+			 AC_MSG_RESULT(yes)
 			 G_THREAD_LIBS="$G_THREAD_LIBS $add_thread_lib"
 			 posix_priority_min="sched_get_priority_min(SCHED_OTHER)"
 		     	 posix_priority_max="sched_get_priority_max(SCHED_OTHER)"
-			 break],
-			[AC_MSG_RESULT(no)])
-	   done
+#			 break],
+#			[AC_MSG_RESULT(no)])
+#	   done
 	   LIBS="$glib_save_LIBS"
            mutex_has_default=yes
            mutex_default_type='pthread_mutex_t'
@@ -1463,18 +1479,20 @@
 	if test "$ac_cv_header_pwd_h" = "yes"; then
 	 	AC_CACHE_CHECK([for posix getpwuid_r],
 			ac_cv_func_posix_getpwuid_r,
-			[AC_TRY_RUN([#include <errno.h>
-                                #include <pwd.h>
-                                int main () { char buffer[10000];
-                                struct passwd pwd, *pwptr = &pwd;
-                                int error;
-                                errno = 0;
-                                error = getpwuid_r (0, &pwd, buffer, 
-                                        sizeof (buffer), &pwptr);
-                                return (error < 0 && errno == ENOSYS) 
-					|| error == ENOSYS; }],
-				[ac_cv_func_posix_getpwuid_r=yes],
-				[ac_cv_func_posix_getpwuid_r=no])])
+#			[AC_TRY_RUN([#include <errno.h>
+#                                #include <pwd.h>
+#                                int main () { char buffer[10000];
+#                                struct passwd pwd, *pwptr = &pwd;
+#                                int error;
+#                                errno = 0;
+#                                error = getpwuid_r (0, &pwd, buffer, 
+#                                        sizeof (buffer), &pwptr);
+#                                return (error < 0 && errno == ENOSYS) 
+#					|| error == ENOSYS; }],
+				[ac_cv_func_posix_getpwuid_r=yes]
+				#,
+#				[ac_cv_func_posix_getpwuid_r=no])]
+				)
 		if test "$ac_cv_func_posix_getpwuid_r" = yes; then
 			AC_DEFINE(HAVE_POSIX_GETPWUID_R,1,
 				[Have POSIX function getpwuid_r])
@@ -1499,7 +1517,7 @@
 		glib_save_CPPFLAGS="$CPPFLAGS"
 		CPPFLAGS="$CPPFLAGS $GTHREAD_COMPILE_IMPL_DEFINES"
 		dnl we might grow sizeof(pthread_t) later on, so use a dummy name here
-		GLIB_SIZEOF([#include <pthread.h>], pthread_t, system_thread)
+		GLIB_SIZEOF([#include <pthread.h>], pthread_t, system_thread,4)
 		# This is not AC_CHECK_FUNC to also work with function
 		# name mangling in header files.
 		AC_MSG_CHECKING(for pthread_attr_setstacksize)
@@ -1560,24 +1578,26 @@
 		CPPFLAGS="$glib_save_CPPFLAGS"
 
 		AC_MSG_CHECKING(whether to use the PID niceness surrogate for thread priorities)
-		AC_TRY_RUN([#include <pthread.h> 
-			#include <sys/types.h>
-			#include <unistd.h>
-			pid_t other_pid = 0;
-
-			void* func(void* data) {other_pid = getpid();}
-                	main()
-			{ pthread_t t; 
-			  void *ret;
-			  pthread_create (&t, $defattr, func, NULL);
-			  pthread_join (t, &ret);
-			  exit (getpid()==other_pid || 
-				$posix_priority_min != $posix_priority_max);
-			}],
-			[AC_MSG_RESULT(yes)
+#		AC_TRY_RUN([#include <pthread.h> 
+#			#include <sys/types.h>
+#			#include <unistd.h>
+#			pid_t other_pid = 0;
+#
+#			void* func(void* data) {other_pid = getpid();}
+#                	main()
+#			{ pthread_t t; 
+#			  void *ret;
+#			  pthread_create (&t, $defattr, func, NULL);
+#			  pthread_join (t, &ret);
+#			  exit (getpid()==other_pid || 
+#				$posix_priority_min != $posix_priority_max);
+#			}],
+#			[
+			AC_MSG_RESULT(yes)
 			  AC_DEFINE(G_THREAD_USE_PID_SURROGATE, 1, [whether to use the PID niceness surrogate for thread priorities])
-                        ],
-			[AC_MSG_RESULT(no)])
+#                        ]
+			#,
+#			[AC_MSG_RESULT(no)])
 	elif test x"$have_threads" = xwin32; then
 		# It's a pointer to a private struct
 		GLIB_SIZEOF(,struct _GThreadData *, system_thread)
@@ -1622,7 +1642,8 @@
 	GLIB_SIZEOF([#include <$mutex_header_file>],
                     $mutex_default_type,
                     gmutex,
-                    )
+                    24
+		    )
 	GLIB_BYTE_CONTENTS([#include <$mutex_header_file>],
 			   $mutex_default_type,
 			   gmutex,
@@ -1640,16 +1661,16 @@
 dnl ****************************************
 dnl *** GLib POLL* compatibility defines ***
 dnl ****************************************
-GLIB_SYSDEFS(
-[#include <sys/types.h>
-#include <sys/poll.h>],
-	POLLIN:1 POLLOUT:4 POLLPRI:2 POLLERR:8 POLLHUP:16 POLLNVAL:32,
-	glibconfig-sysdefs.h,
-	=)
+#GLIB_SYSDEFS(
+#[#include <sys/types.h>
+##include <sys/poll.h>],
+#	POLLIN:1 POLLOUT:4 POLLPRI:2 POLLERR:8 POLLHUP:16 POLLNVAL:32,
+#	glibconfig-sysdefs.h,
+#	=)
 
 dnl **********************
 dnl *** Win32 API libs ***
-dnl **********************
+dnl ********************** 
 
 case $host in
   *-*-cygwin*)
diff -Naur glib-2.0.7.orig/glibconfig-sysdefs.h glib-2.0.7/glibconfig-sysdefs.h
--- glib-2.0.7.orig/glibconfig-sysdefs.h	1970-01-01 01:00:00.000000000 +0100
+++ glib-2.0.7/glibconfig-sysdefs.h	2004-03-15 01:48:32.000000000 +0100
@@ -0,0 +1,6 @@
+#define GLIB_SYSDEF_POLLIN =1
+#define GLIB_SYSDEF_POLLOUT =4
+#define GLIB_SYSDEF_POLLPRI =2
+#define GLIB_SYSDEF_POLLERR =8
+#define GLIB_SYSDEF_POLLHUP =16
+#define GLIB_SYSDEF_POLLNVAL =32
diff -Naur glib-2.0.7.orig/Makefile.in glib-2.0.7/Makefile.in
--- glib-2.0.7.orig/Makefile.in	2002-11-04 21:31:27.000000000 +0100
+++ glib-2.0.7/Makefile.in	2004-03-15 02:58:47.000000000 +0100
@@ -149,7 +149,7 @@
 
 AUTOMAKE_OPTIONS = 1.4
 
-SUBDIRS = . m4macros glib gobject gmodule gthread tests build po docs
+SUBDIRS = . m4macros glib gobject gmodule gthread tests build po
 
 bin_SCRIPTS = glib-gettextize
 

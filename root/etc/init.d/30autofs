#!/bin/sh

# This script starts the automounter. It is basically an example that
# can be customized by the user.

# Useful commands:

# Force unmount of unused automounted file systems:
# 	kill -USR1 `cat /var/run/automount.pid`	
# Unmount and exit cleanly:
# 	kill -TERM `cat /var/run/automount.pid`


# Production parameters
TIMEOUT=600
DEBUG=
VERBOSE=
# Use ghosting, does not break anything if kernel support not present. 
GHOSTING=-g

# Debug parameters (note that DEBUG and VERBOSE are meaningful only with
# syslogd)
#TIMEOUT=30
#DEBUG=-d
#VERBOSE=-v

PIDFILE=/var/run/automount.pid

# The parent directory of AUTOFSMOUNT must be absolute, must exist,
# and be writeable. The AUTOFSMOUNTDIR should not exist.
#AUTOFSMOUNTDIR=/autofs
AUTOFSMOUNTDIR=/tmp/autofs
MAPFILE=/var/etc/auto.net-$(tuxinfo -V)
if [ ! -e $MAPFILE ]; then
	MAPFILE=/etc/auto.net
fi

case $1 in
	start)
		if [ ! -e $MAPFILE ] ; then
			echo "$0: $MAPFILE does not exist, exiting."
			exit 1;
		fi
		echo "[BOOT] Starting the automounter"
		# Load nfs-necessary modules.
		# For CIF-stuff this needs to be extended
		if [ -x /sbin/modprobe ] ; then
#			grep -q autofs4	/proc/filesystems || modprobe autofs4
			grep -q nfs	/proc/filesystems || modprobe nfs
			#grep -q cifs	/proc/filesystems || modprobe cifs
		else
			grep -q sunrpc	/proc/modules     || insmod sunrpc
			grep -q lockd	/proc/modules     || insmod lockd
			grep -q nfs	/proc/filesystems || insmod nfs
			#grep -q cifs	/proc/filesystems || insmod cifs
		fi

		if [ ! -d /var/lock ]; then
			mkdir /var/lock
		fi

		automount $DEBUG $GHOSTING $VERBOSE -t $TIMEOUT -p $PIDFILE $AUTOFSMOUNTDIR file $MAPFILE
		;;
	stop)
		echo "Stopping the automounter"
		read PID < $PIDFILE
		kill -TERM $PID
		;;
esac

exit 0

#!/bin/sh

# This script starts the automounter. It is basically an example that
# can be customized by the user.

# Useful commands:

# Force unmount of unused automounted file systems:
# 	kill -USR1 `cat /var/run/automount.pid`	
# Unmount and exit cleanly:
# 	kill -TERM `cat /var/run/automount.pid`


# Production parameters
TIMEOUT=600
DEBUG=
VERBOSE=
# Use ghosting, does not break anything if kernel support not present. 
GHOSTING=-g

# Debug parameters (note that DEBUG and VERBOSE are meaningful only with
# syslogd)
#TIMEOUT=30
#DEBUG=-d
#VERBOSE=-v

PIDFILE=/var/run/automount.pid

# The parent directory of AUTOFSMOUNT must be absolute, must exist,
# and be writeable. The AUTOFSMOUNTDIR should not exist.
#AUTOFSMOUNTDIR=/autofs
AUTOFSMOUNTDIR=/tmp/automount
MAPFILE=/var/etc/auto.net-$(tuxinfo -V)
if [ ! -e $MAPFILE ]; then
	MAPFILE=/etc/auto.net
fi

echo "Starting the automounter"

MD=/lib/modules/$(uname -r)

# Load nfs-necessary modules.
# For CIF-stuff this needs to be extended

if [ -x /sbin/modprobe ] ; then
    # If nfs-support is contained in the kernel, this will fail. The 
    # error can be ignored.
    grep -q autofs4 /proc/filesystems || modprobe autofs4
    grep -q nfs /proc/filesystems || modprobe nfs
#   grep -q cifs /proc/filesystems || modprobe cifs
else
    grep -q sunrpc /proc/modules     || insmod $MD/kernel/net/sunrpc/sunrpc.o
    grep -q lockd  /proc/modules     || insmod $MD/kernel/fs/lockd/lockd.o
    grep -q nfs    /proc/filesystems || insmod $MD/kernel/fs/nfs/nfs.o
#   grep -q cifs   /proc/filesystems || insmod $MD/kernel/fs/cifs/cifs.o
fi

if [ ! -d /var/lock ]; then
    mkdir /var/lock
fi
 
if [ -e $MAPFILE ] ; then
    automount $DEBUG $GHOSTING $VERBOSE -t $TIMEOUT -p $PIDFILE $AUTOFSMOUNTDIR file $MAPFILE
fi
